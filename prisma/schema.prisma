generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model booking {
  id          Int            @id @unique(map: "Booking_id_key") @default(autoincrement())
  memberId    Int            @map("member_id")
  showtimeId  Int            @map("showtime_id")
  bookingDate DateTime       @default(now()) @map("booking_date")
  amountSeats Int            @map("amount_seats")
  status      booking_status @default(Pending)

  @@index([memberId], map: "Booking_member_id_fkey")
  @@index([showtimeId], map: "Booking_showtime_id_fkey")
}

model member {
  id          Int           @id @unique(map: "Member_id_key") @default(autoincrement())
  email       String        @unique(map: "Member_email_key")
  password    String
  firstName   String?       @map("first_name")
  lastName    String?       @map("last_name")
  birthDate   DateTime?     @map("birth_date")
  phoneNumber String?       @map("phone_number")
  createDate  DateTime      @default(now())
  role        member_role   @default(User)
  status      member_status @default(Available)
}

model movie {
  id          Int          @id @unique(map: "Movie_id_key") @default(autoincrement())
  name        String
  genre       String
  duration    Int
  status      movie_status @default(NotAvailable)
  releaseDate DateTime     @map("release_date")
  imageUrl    String?      @map("image_url")
  showtime    showtime[]
}

model payment {
  id            Int                     @id @unique(map: "Payment_id_key") @default(autoincrement())
  bookingId     Int                     @map("booking_id")
  amount        Float
  paymentDate   DateTime?               @map("payment_date")
  paymentMethod payment_payment_method? @map("payment_method")
  status        payment_status          @default(Pending)

  @@index([bookingId], map: "Payment_booking_id_fkey")
}

model seat {
  id        Int         @id @unique(map: "Seat_id_key") @default(autoincrement())
  theaterId Int         @map("theater_id")
  row       String
  column    String
  status    seat_status @default(Available)

  @@index([theaterId], map: "Seat_theater_id_fkey")
}

model seatbooking {
  id        Int                @id @unique(map: "SeatBooking_id_key") @default(autoincrement())
  bookingId Int                @map("booking_id")
  seatId    Int                @map("seat_id")
  status    seatbooking_status @default(Available)

  @@index([bookingId], map: "SeatBooking_booking_id_fkey")
  @@index([seatId], map: "SeatBooking_seat_id_fkey")
}

model showtime {
  id           Int             @id @unique(map: "Showtime_id_key") @default(autoincrement())
  movieId      Int             @map("movie_id")
  theaterId    Int             @map("theater_id")
  startTime    DateTime        @map("start_time")
  endTime      DateTime        @map("end_time")
  status       showtime_status @default(Available)
  audioType    audio_type?     @map("audio_type")
  subtitleType subtitle_type?  @map("subtitle_type")

  movie   movie   @relation(fields: [movieId], references: [id])
  theater theater @relation(fields: [theaterId], references: [id])

  @@index([movieId], map: "Showtime_movie_id_fkey")
  @@index([theaterId], map: "Showtime_theater_id_fkey")
}

model theater {
  id       Int            @id @unique(map: "Theater_id_key") @default(autoincrement())
  name     String
  type     String
  capacity Int
  status   theater_status @default(Available)
  showtime showtime[]
}

enum audio_type {
  Thai
  Soundtrack
  English
}

enum subtitle_type {
  Thai
  English
  None
}

enum payment_payment_method {
  CreditCard
  DebitCard
  BankTransfer
}

enum payment_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum member_role {
  Admin
  User
}

enum seatbooking_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum seat_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum movie_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum theater_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum booking_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum showtime_status {
  Available
  NotAvailable
  Pending
  Completed
}

enum member_status {
  Available
  NotAvailable
  Pending
  Completed
}
